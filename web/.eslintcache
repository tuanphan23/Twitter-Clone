[{"/Users/tuanphan/workspace/Twitter-Clone/web/src/App.tsx":"1","/Users/tuanphan/workspace/Twitter-Clone/web/src/components/Users.tsx":"2","/Users/tuanphan/workspace/Twitter-Clone/web/src/pages/Signup.tsx":"3","/Users/tuanphan/workspace/Twitter-Clone/web/src/pages/Login.tsx":"4","/Users/tuanphan/workspace/Twitter-Clone/web/src/components/IsAuthenticated.tsx":"5","/Users/tuanphan/workspace/Twitter-Clone/web/src/components/Landing.tsx":"6","/Users/tuanphan/workspace/Twitter-Clone/web/src/pages/Profile.tsx":"7","/Users/tuanphan/workspace/Twitter-Clone/web/src/components/CreateProfile.tsx":"8","/Users/tuanphan/workspace/Twitter-Clone/web/src/components/UpdateProfile.tsx":"9","/Users/tuanphan/workspace/Twitter-Clone/web/src/components/LeftNav.tsx":"10","/Users/tuanphan/workspace/Twitter-Clone/web/src/components/Tweet.tsx":"11","/Users/tuanphan/workspace/Twitter-Clone/web/src/styles/CustomModalStyles.ts":"12","/Users/tuanphan/workspace/Twitter-Clone/web/src/components/Logout.tsx":"13","/Users/tuanphan/workspace/Twitter-Clone/web/src/pages/Home.tsx":"14","/Users/tuanphan/workspace/Twitter-Clone/web/src/styles/LogoutModal.ts":"15","/Users/tuanphan/workspace/Twitter-Clone/web/src/components/AllTweets.tsx":"16","/Users/tuanphan/workspace/Twitter-Clone/web/src/components/HomePageTweet.tsx":"17","/Users/tuanphan/workspace/Twitter-Clone/web/src/components/LikeTweet.tsx":"18","/Users/tuanphan/workspace/Twitter-Clone/web/src/components/DeleteLike.tsx":"19"},{"size":1605,"mtime":1612005125202,"results":"20","hashOfConfig":"21"},{"size":498,"mtime":1611954765591,"results":"22","hashOfConfig":"21"},{"size":2853,"mtime":1611969738505,"results":"23","hashOfConfig":"21"},{"size":2209,"mtime":1612039915112,"results":"24","hashOfConfig":"21"},{"size":547,"mtime":1611961505123,"results":"25","hashOfConfig":"21"},{"size":1639,"mtime":1611963474505,"results":"26","hashOfConfig":"21"},{"size":2626,"mtime":1612040171636,"results":"27","hashOfConfig":"21"},{"size":4045,"mtime":1611998930098,"results":"28","hashOfConfig":"21"},{"size":4333,"mtime":1611994115149,"results":"29","hashOfConfig":"21"},{"size":1428,"mtime":1611971972664,"results":"30","hashOfConfig":"21"},{"size":2448,"mtime":1611996215639,"results":"31","hashOfConfig":"21"},{"size":384,"mtime":1611996195262,"results":"32","hashOfConfig":"21"},{"size":1789,"mtime":1611998195260,"results":"33","hashOfConfig":"21"},{"size":1198,"mtime":1612006183196,"results":"34","hashOfConfig":"21"},{"size":411,"mtime":1611996504537,"results":"35","hashOfConfig":"21"},{"size":3323,"mtime":1612040456615,"results":"36","hashOfConfig":"21"},{"size":1680,"mtime":1612006121199,"results":"37","hashOfConfig":"21"},{"size":760,"mtime":1612041257533,"results":"38","hashOfConfig":"21"},{"size":768,"mtime":1612041266992,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"43"},"11o3x3k",{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/tuanphan/workspace/Twitter-Clone/web/src/App.tsx",["81"],"import {\n  ApolloClient,\n  ApolloProvider,\n  HttpLink,\n  InMemoryCache,\n} from \"@apollo/client\";\nimport React from \"react\";\nimport \"./App.css\";\nimport Users from \"./components/Users\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Landing from \"./components/Landing\";\nimport { setContext } from \"apollo-link-context\";\nimport Signup from \"./pages/Signup\";\nimport Login from \"./pages/Login\";\nimport IsAuthenticated from \"./components/IsAuthenticated\";\nimport Profile from \"./pages/Profile\";\nimport Home from \"./pages/Home\";\n\nconst httpLink = new HttpLink({ uri: \"http://localhost:4000\" });\nconst authLink = setContext(async (req, { headers }) => {\n  const token = localStorage.getItem(\"token\");\n\n  return {\n    ...headers,\n    headers: {\n      Authorization: token ? `Bearer ${token}` : null,\n    },\n  };\n});\n\nconst link = authLink.concat(httpLink as any);\nconst client = new ApolloClient({\n  link: link as any,\n  cache: new InMemoryCache(),\n});\n\nfunction App() {\n  return (\n    <ApolloProvider client={client}>\n      <Router>\n        <Switch>\n          <Route path=\"/landing\">\n            <Landing />\n          </Route>\n          <Route path=\"/signup\">\n            <Signup />\n          </Route>\n          <Route path=\"/login\">\n            <Login />\n          </Route>\n          <IsAuthenticated>\n            <Route exact path=\"/\">\n              <Home />\n            </Route>\n            <Route path=\"/profile\">\n              <Profile />\n            </Route>\n          </IsAuthenticated>\n        </Switch>\n      </Router>\n    </ApolloProvider>\n  );\n}\n\nexport default App;\n",["82","83"],"/Users/tuanphan/workspace/Twitter-Clone/web/src/components/Users.tsx",[],"/Users/tuanphan/workspace/Twitter-Clone/web/src/pages/Signup.tsx",["84","85"],"/Users/tuanphan/workspace/Twitter-Clone/web/src/pages/Login.tsx",["86","87"],"import React from \"react\";\nimport { gql, useMutation } from \"@apollo/client\";\nimport { ErrorMessage, Field, Form, Formik, yupToFormErrors } from \"formik\";\nimport * as Yup from \"yup\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport TwitterLogo from \"../styles/assets/twitter-logo.png\";\nimport \"../styles/login.css\";\n\nconst LOGIN_MUTATION = gql`\n  mutation login($email: String!, $password: String!) {\n    login(email: $email, password: $password) {\n      token\n    }\n  }\n`;\n\ninterface LoginValues {\n  email: string;\n  password: string;\n}\n\nfunction Login() {\n  const history = useHistory();\n  const [login, { data }] = useMutation(LOGIN_MUTATION);\n\n  const initialValues: LoginValues = {\n    email: \"\",\n    password: \"\",\n  };\n\n  const validationSchema = Yup.object({\n    email: Yup.string()\n      .email(\"Invalid email address\")\n      .required(\"Email Required\"),\n    password: Yup.string()\n      .max(20, \"Must be 20 characters or less\")\n      .required(\"Password Required\"),\n  });\n\n  return (\n    <div className=\"container\">\n      <img\n        src={TwitterLogo}\n        alt=\"logo\"\n        style={{ width: \"50px\" }}\n        className=\"logo\"\n      />\n      <h3>Log in to your Twitter Account</h3>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={validationSchema}\n        onSubmit={async (values, { setSubmitting }) => {\n          setSubmitting(true);\n          const response = await login({\n            variables: values,\n          });\n          localStorage.setItem(\"token\", response.data.login.token);\n          setSubmitting(false);\n          history.push(\"/\");\n        }}\n      >\n        <Form>\n          <Field name=\"email\" type=\"text\" placeholder=\"Email\" />\n          <ErrorMessage name=\"email\" component={\"div\"} />\n          <Field name=\"password\" type=\"password\" placeholder=\"Password\" />\n          <ErrorMessage name=\"password\" component={\"div\"} />\n          <button type=\"submit\" className=\"login-button\">\n            <span>Login</span>\n          </button>\n        </Form>\n      </Formik>\n      <div className=\"register\">\n        <h4>Don't have an account?</h4>\n        <Link to=\"/signup\">Sign up</Link>\n      </div>\n    </div>\n  );\n}\n\nexport default Login;\n","/Users/tuanphan/workspace/Twitter-Clone/web/src/components/IsAuthenticated.tsx",[],"/Users/tuanphan/workspace/Twitter-Clone/web/src/components/Landing.tsx",[],"/Users/tuanphan/workspace/Twitter-Clone/web/src/pages/Profile.tsx",[],"/Users/tuanphan/workspace/Twitter-Clone/web/src/components/CreateProfile.tsx",["88"],"/Users/tuanphan/workspace/Twitter-Clone/web/src/components/UpdateProfile.tsx",[],"/Users/tuanphan/workspace/Twitter-Clone/web/src/components/LeftNav.tsx",[],"/Users/tuanphan/workspace/Twitter-Clone/web/src/components/Tweet.tsx",["89"],"/Users/tuanphan/workspace/Twitter-Clone/web/src/styles/CustomModalStyles.ts",[],"/Users/tuanphan/workspace/Twitter-Clone/web/src/components/Logout.tsx",[],"/Users/tuanphan/workspace/Twitter-Clone/web/src/pages/Home.tsx",["90","91"],"/Users/tuanphan/workspace/Twitter-Clone/web/src/styles/LogoutModal.ts",[],"/Users/tuanphan/workspace/Twitter-Clone/web/src/components/AllTweets.tsx",[],"/Users/tuanphan/workspace/Twitter-Clone/web/src/components/HomePageTweet.tsx",[],"/Users/tuanphan/workspace/Twitter-Clone/web/src/components/LikeTweet.tsx",[],"/Users/tuanphan/workspace/Twitter-Clone/web/src/components/DeleteLike.tsx",[],{"ruleId":"92","severity":1,"message":"93","line":9,"column":8,"nodeType":"94","messageId":"95","endLine":9,"endColumn":13},{"ruleId":"96","replacedBy":"97"},{"ruleId":"98","replacedBy":"99"},{"ruleId":"92","severity":1,"message":"100","line":3,"column":45,"nodeType":"94","messageId":"95","endLine":3,"endColumn":60},{"ruleId":"92","severity":1,"message":"101","line":26,"column":20,"nodeType":"94","messageId":"95","endLine":26,"endColumn":24},{"ruleId":"92","severity":1,"message":"100","line":3,"column":45,"nodeType":"94","messageId":"95","endLine":3,"endColumn":60},{"ruleId":"92","severity":1,"message":"101","line":24,"column":19,"nodeType":"94","messageId":"95","endLine":24,"endColumn":23},{"ruleId":"92","severity":1,"message":"100","line":4,"column":45,"nodeType":"94","messageId":"95","endLine":4,"endColumn":60},{"ruleId":"92","severity":1,"message":"102","line":32,"column":9,"nodeType":"94","messageId":"95","endLine":32,"endColumn":25},{"ruleId":"92","severity":1,"message":"103","line":28,"column":9,"nodeType":"94","messageId":"95","endLine":28,"endColumn":16},{"ruleId":"92","severity":1,"message":"101","line":29,"column":27,"nodeType":"94","messageId":"95","endLine":29,"endColumn":31},"@typescript-eslint/no-unused-vars","'Users' is defined but never used.","Identifier","unusedVar","no-native-reassign",["104"],"no-negated-in-lhs",["105"],"'yupToFormErrors' is defined but never used.","'data' is assigned a value but never used.","'validationSchema' is assigned a value but never used.","'history' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]