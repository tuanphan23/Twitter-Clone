[{"/Users/tuanphan/workspace/Twitter-Clone/web/src/App.tsx":"1","/Users/tuanphan/workspace/Twitter-Clone/web/src/components/Users.tsx":"2","/Users/tuanphan/workspace/Twitter-Clone/web/src/pages/Signup.tsx":"3","/Users/tuanphan/workspace/Twitter-Clone/web/src/pages/Login.tsx":"4","/Users/tuanphan/workspace/Twitter-Clone/web/src/components/IsAuthenticated.tsx":"5","/Users/tuanphan/workspace/Twitter-Clone/web/src/components/Landing.tsx":"6","/Users/tuanphan/workspace/Twitter-Clone/web/src/pages/Profile.tsx":"7","/Users/tuanphan/workspace/Twitter-Clone/web/src/components/CreateProfile.tsx":"8","/Users/tuanphan/workspace/Twitter-Clone/web/src/components/UpdateProfile.tsx":"9","/Users/tuanphan/workspace/Twitter-Clone/web/src/components/LeftNav.tsx":"10","/Users/tuanphan/workspace/Twitter-Clone/web/src/components/Tweet.tsx":"11","/Users/tuanphan/workspace/Twitter-Clone/web/src/styles/CustomModalStyles.ts":"12","/Users/tuanphan/workspace/Twitter-Clone/web/src/components/Logout.tsx":"13"},{"size":1572,"mtime":1611964991808,"results":"14","hashOfConfig":"15"},{"size":498,"mtime":1611954765591,"results":"16","hashOfConfig":"15"},{"size":2853,"mtime":1611969738505,"results":"17","hashOfConfig":"15"},{"size":2214,"mtime":1611969765728,"results":"18","hashOfConfig":"15"},{"size":547,"mtime":1611961505123,"results":"19","hashOfConfig":"15"},{"size":1639,"mtime":1611963474505,"results":"20","hashOfConfig":"15"},{"size":2549,"mtime":1611999445497,"results":"21","hashOfConfig":"15"},{"size":4045,"mtime":1611998930098,"results":"22","hashOfConfig":"15"},{"size":4333,"mtime":1611994115149,"results":"23","hashOfConfig":"15"},{"size":1428,"mtime":1611971972664,"results":"24","hashOfConfig":"15"},{"size":2448,"mtime":1611996215639,"results":"25","hashOfConfig":"15"},{"size":384,"mtime":1611996195262,"results":"26","hashOfConfig":"15"},{"size":1789,"mtime":1611998195260,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"11o3x3k",{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"34","messages":"35","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/tuanphan/workspace/Twitter-Clone/web/src/App.tsx",[],"/Users/tuanphan/workspace/Twitter-Clone/web/src/components/Users.tsx",[],"/Users/tuanphan/workspace/Twitter-Clone/web/src/pages/Signup.tsx",["55","56"],"/Users/tuanphan/workspace/Twitter-Clone/web/src/pages/Login.tsx",["57","58"],"import React from \"react\";\nimport { gql, useMutation } from \"@apollo/client\";\nimport { ErrorMessage, Field, Form, Formik, yupToFormErrors } from \"formik\";\nimport * as Yup from \"yup\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport TwitterLogo from \"../styles/assets/twitter-logo.png\";\nimport \"../styles/login.css\";\n\nconst LOGIN_MUTATION = gql`\n  mutation login($email: String!, $password: String!) {\n    login(email: $email, password: $password) {\n      token\n    }\n  }\n`;\n\ninterface LoginValues {\n  email: string;\n  password: string;\n}\n\nfunction Login() {\n  const history = useHistory();\n  const [login, { data }] = useMutation(LOGIN_MUTATION);\n\n  const initialValues: LoginValues = {\n    email: \"\",\n    password: \"\",\n  };\n\n  const validationSchema = Yup.object({\n    email: Yup.string()\n      .email(\"Invalid email address\")\n      .required(\"Email Required\"),\n    password: Yup.string()\n      .max(20, \"Must be 20 characters or less\")\n      .required(\"Password Required\"),\n  });\n\n  return (\n    <div className=\"container\">\n      <img\n        src={TwitterLogo}\n        alt=\"logo\"\n        style={{ width: \"50px\" }}\n        className=\"logo\"\n      />\n      <h3>Log in to your Twitter Account</h3>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={validationSchema}\n        onSubmit={async (values, { setSubmitting }) => {\n          setSubmitting(true);\n          const response = await login({\n            variables: values,\n          });\n          localStorage.setItem(\"token\", response.data.login.token);\n          setSubmitting(false);\n          history.push(\"/users\");\n        }}\n      >\n        <Form>\n          <Field name=\"email\" type=\"text\" placeholder=\"Email\" />\n          <ErrorMessage name=\"email\" component={\"div\"} />\n          <Field name=\"password\" type=\"password\" placeholder=\"Password\" />\n          <ErrorMessage name=\"password\" component={\"div\"} />\n          <button type=\"submit\" className=\"login-button\">\n            <span>Login</span>\n          </button>\n        </Form>\n      </Formik>\n      <div className=\"register\">\n        <h4>Don't have an account?</h4>\n        <Link to=\"/signup\">Sign up</Link>\n      </div>\n    </div>\n  );\n}\n\nexport default Login;\n","/Users/tuanphan/workspace/Twitter-Clone/web/src/components/IsAuthenticated.tsx",[],"/Users/tuanphan/workspace/Twitter-Clone/web/src/components/Landing.tsx",[],"/Users/tuanphan/workspace/Twitter-Clone/web/src/pages/Profile.tsx",[],"/Users/tuanphan/workspace/Twitter-Clone/web/src/components/CreateProfile.tsx",["59"],"/Users/tuanphan/workspace/Twitter-Clone/web/src/components/UpdateProfile.tsx",[],"/Users/tuanphan/workspace/Twitter-Clone/web/src/components/LeftNav.tsx",[],"/Users/tuanphan/workspace/Twitter-Clone/web/src/components/Tweet.tsx",["60"],"/Users/tuanphan/workspace/Twitter-Clone/web/src/styles/CustomModalStyles.ts",[],"/Users/tuanphan/workspace/Twitter-Clone/web/src/components/Logout.tsx",[],{"ruleId":"61","severity":1,"message":"62","line":3,"column":45,"nodeType":"63","messageId":"64","endLine":3,"endColumn":60},{"ruleId":"61","severity":1,"message":"65","line":26,"column":20,"nodeType":"63","messageId":"64","endLine":26,"endColumn":24},{"ruleId":"61","severity":1,"message":"62","line":3,"column":45,"nodeType":"63","messageId":"64","endLine":3,"endColumn":60},{"ruleId":"61","severity":1,"message":"65","line":24,"column":19,"nodeType":"63","messageId":"64","endLine":24,"endColumn":23},{"ruleId":"61","severity":1,"message":"62","line":4,"column":45,"nodeType":"63","messageId":"64","endLine":4,"endColumn":60},{"ruleId":"61","severity":1,"message":"66","line":32,"column":9,"nodeType":"63","messageId":"64","endLine":32,"endColumn":25},"@typescript-eslint/no-unused-vars","'yupToFormErrors' is defined but never used.","Identifier","unusedVar","'data' is assigned a value but never used.","'validationSchema' is assigned a value but never used."]